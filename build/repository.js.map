{"version":3,"sources":["../src/repository.js"],"names":["createOneUser","data","bitbucketId","User","ATTRIBUTE_BITBUCKET_ID","db","collection","COLLECTION","doc","set","readOneUserByBitbucketId","get","readUsersByBitbucketId","bitbucketIds","where"],"mappings":";;;;;;;;;AAAA;;AACA;;;;AAEA,eAAeA,aAAf,CAA6BC,IAA7B,EAAmC;AAC/B,QAAMC,WAAW,GAAGD,IAAI,CAACE,cAAKC,sBAAN,CAAxB;AACA,SAAO,MAAMC,gBAAGC,UAAH,CAAcH,cAAKI,UAAnB,EAA+BC,GAA/B,CAAmCN,WAAnC,EAAgDO,GAAhD,CAAoDR,IAApD,CAAb;AACH;;AAED,eAAeS,wBAAf,CAAwCR,WAAxC,EAAqD;AACjD,SAAO,MAAMG,gBAAGC,UAAH,CAAcH,cAAKI,UAAnB,EAA+BC,GAA/B,CAAmCN,WAAnC,EAAgDS,GAAhD,EAAb;AACH;;AAED,eAAeC,sBAAf,CAAsCC,YAAtC,EAAoD;AAChD,SAAO,MAAMR,gBACRC,UADQ,CACGH,cAAKI,UADR,EAERO,KAFQ,CAEFX,cAAKC,sBAFH,EAE2B,IAF3B,EAEiCS,YAFjC,EAGRF,GAHQ,EAAb;AAIH","sourcesContent":["import db from \"./firebase/client\";\nimport User from \"./const/User\";\n\nasync function createOneUser(data) {\n    const bitbucketId = data[User.ATTRIBUTE_BITBUCKET_ID];\n    return await db.collection(User.COLLECTION).doc(bitbucketId).set(data);\n}\n\nasync function readOneUserByBitbucketId(bitbucketId) {\n    return await db.collection(User.COLLECTION).doc(bitbucketId).get();\n}\n\nasync function readUsersByBitbucketId(bitbucketIds) {\n    return await db\n        .collection(User.COLLECTION)\n        .where(User.ATTRIBUTE_BITBUCKET_ID, \"in\", bitbucketIds)\n        .get();\n}\n\nexport { createOneUser, readOneUserByBitbucketId, readUsersByBitbucketId };\n"],"file":"repository.js"}